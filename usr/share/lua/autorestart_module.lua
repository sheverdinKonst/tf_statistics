#!/usr/bin/env lua

---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by sheverdin.
--- DateTime: 3/18/24 12:26 PM
---

local tf  = require "tf_module"

local autorestart_module = {}

autorestart_module.errorCode = {
    { ERR_TEST_DISABLE, 0x00040, 5 },
    { ERR_TEST_LINK,    0x00004, 2 },
    { ERR_TEST_PING,    0x00008, 3 },
    { ERR_TEST_SPEED,   0x00010, 4 },
    { ERR_TIME_ALARM,   0x00020, 6 },
    { ERR_OK,           0x0,     1 },
}

local testTypeE =
{
    test_disable    = 0,
    test_link       = 1,
    test_ping       = 2,
    test_speed      = 3,
    test_time       = 4,
}

local arStatus =
{
    id         = "id",
    error_Code = "error_Code",
    test_type  = "test_type"
}

autorestart_module.configEnum = {
    port                    = { "port",         "Port:      " },
    autoRstMode             = { "state",        "State:     " },
    autoRstDstIP            = { "host",         "Host:      " },
    autoRstSpeedDown        = { "min_speed",    "Min speed: " },
    autoRstSpeedUp          = { "max_speed",    "Max speed: " },
    autoReStartTimeOnHour   = { "timeUp",       "Time Up:   " },
    autoReStartTimeOnMin    = { "timeUp",       "Time Up:   " },
    autoReStartTimeOffHour  = { "timeUp",       "Time Up:   " },
    autoReStartTimeOffMin   = { "timeUp",       "Time Up:   " },
    time_down               = { "timeDown",     "Time Down: " }
}

function autorestart_module.showStatus()
    local cmd = "tf_poe_restart_ctrl " .. "status"
    local status = tf.collectJsonTable(cmd)
    return status
end

function autorestart_module.showConfig(portNum)
    local resConfig = {}
    local cmd = ""
    if portNum == "all" then
        cmd = "ubus call uci get '{\"config\":\"tf_autorestart\"}'"
    else
        cmd = "ubus call uci get '{\"config\":\"tf_autorestart\", \"section\":\"" .. portNum .. "\"}'"
    end
    resConfig = tf.collectJsonTable(cmd)
    return resConfig
end

return autorestart_module

